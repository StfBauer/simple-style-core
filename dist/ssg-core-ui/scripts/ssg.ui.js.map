{"version":3,"sources":["ssgCore.template.js","ssg.ui.js","ssg.ui.helper.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC31BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ssg.ui.js","sourcesContent":["this[\"ssgCore\"] = this[\"ssgCore\"] || {};\nthis[\"ssgCore\"][\"templates\"] = this[\"ssgCore\"][\"templates\"] || {};\nthis[\"ssgCore\"][\"templates\"][\"addTools\"] = Handlebars.template({\"compiler\":[7,\">= 4.0.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    return \"<div id=\\\"ssg-add-tools\\\">\\n</div>\";\n},\"useData\":true});\nHandlebars.registerPartial(\"buttons\",Handlebars.template({\"compiler\":[7,\">= 4.0.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    var helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=\"function\", alias4=container.escapeExpression;\n\n  return \"<button id=\\\"ssg-btn\"\n    + alias4(((helper = (helper = helpers.action || (depth0 != null ? depth0.action : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{\"name\":\"action\",\"hash\":{},\"data\":data}) : helper)))\n    + \"\\\" class=\\\"ssg-btn \"\n    + alias4(((helper = (helper = helpers[\"class\"] || (depth0 != null ? depth0[\"class\"] : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{\"name\":\"class\",\"hash\":{},\"data\":data}) : helper)))\n    + \"\\\">\"\n    + alias4(((helper = (helper = helpers.title || (depth0 != null ? depth0.title : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{\"name\":\"title\",\"hash\":{},\"data\":data}) : helper)))\n    + \"</button>\";\n},\"useData\":true}));\nthis[\"ssgCore\"][\"templates\"][\"itemselector\"] = Handlebars.template({\"compiler\":[7,\">= 4.0.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    var helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=\"function\", alias4=container.escapeExpression;\n\n  return \"<div id=\\\"ssg-items\\\" data-item-index=\\\"\"\n    + alias4(((helper = (helper = helpers.index || (depth0 != null ? depth0.index : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{\"name\":\"index\",\"hash\":{},\"data\":data}) : helper)))\n    + \"\\\">\\n\t<button class=\\\"ssg-btn prev\\\" \"\n    + alias4(((helper = (helper = helpers.prevEnabled || (depth0 != null ? depth0.prevEnabled : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{\"name\":\"prevEnabled\",\"hash\":{},\"data\":data}) : helper)))\n    + \" >&lt;</button>\\n\t<span class=\\\"item-title\\\">\"\n    + alias4(((helper = (helper = helpers.title || (depth0 != null ? depth0.title : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{\"name\":\"title\",\"hash\":{},\"data\":data}) : helper)))\n    + \"</span>\\n\t<button class=\\\"ssg-btn next\\\" \"\n    + alias4(((helper = (helper = helpers.nextEnabled || (depth0 != null ? depth0.nextEnabled : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{\"name\":\"nextEnabled\",\"hash\":{},\"data\":data}) : helper)))\n    + \" >&gt;</button>\\n</div>\";\n},\"useData\":true});\nthis[\"ssgCore\"][\"templates\"][\"patternItem\"] = Handlebars.template({\"compiler\":[7,\">= 4.0.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=\"function\", alias4=container.escapeExpression;\n\n  return \"<div class=\\\"ssg-item\\\" data-cat=\\\"\"\n    + alias4(((helper = (helper = helpers.baseFilter || (depth0 != null ? depth0.baseFilter : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{\"name\":\"baseFilter\",\"hash\":{},\"data\":data}) : helper)))\n    + \"\\\" data-file=\\\"\"\n    + alias4(((helper = (helper = helpers.filename || (depth0 != null ? depth0.filename : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{\"name\":\"filename\",\"hash\":{},\"data\":data}) : helper)))\n    + \"\\\">\\n\t<div class=\\\"ssg-item-header\\\">\\n\t\t<div class=\\\"ssg-item-title\\\">\"\n    + alias4(((helper = (helper = helpers.title || (depth0 != null ? depth0.title : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{\"name\":\"title\",\"hash\":{},\"data\":data}) : helper)))\n    + \"</div>\\n\t\t<div class=\\\"ssg-item-description\\\">\\n\t\t\t<div class=\\\"ssg-docs\\\">\"\n    + alias4(((helper = (helper = helpers.description || (depth0 != null ? depth0.description : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{\"name\":\"description\",\"hash\":{},\"data\":data}) : helper)))\n    + \"</div>\\n\t\t\t<b class=\\\"ssg-pattern-label\\\">Pattern name:</b>\\n\t\t\t<span class=\\\"ssg-pattern-name\\\">\"\n    + alias4(((helper = (helper = helpers.filename || (depth0 != null ? depth0.filename : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{\"name\":\"filename\",\"hash\":{},\"data\":data}) : helper)))\n    + \"</span>\\n\t\t</div>\\n\t</div>\\n\t<div class=\\\"sample\\\">\"\n    + ((stack1 = ((helper = (helper = helpers.sample || (depth0 != null ? depth0.sample : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{\"name\":\"sample\",\"hash\":{},\"data\":data}) : helper))) != null ? stack1 : \"\")\n    + \"</div>\\n\t<pre class=\\\"ssg-item-code\\\"><code class='language-markup'>\"\n    + alias4(((helper = (helper = helpers.sample || (depth0 != null ? depth0.sample : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{\"name\":\"sample\",\"hash\":{},\"data\":data}) : helper)))\n    + \"</code></pre>\\n</div>\";\n},\"useData\":true});\nthis[\"ssgCore\"][\"templates\"][\"test\"] = Handlebars.template({\"compiler\":[7,\">= 4.0.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    return \"<div class=\\\"ello\\\"></div>\";\n},\"useData\":true});\nthis[\"ssgCore\"][\"templates\"][\"vpresizer\"] = Handlebars.template({\"compiler\":[7,\">= 4.0.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    var helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3=\"function\", alias4=container.escapeExpression;\n\n  return \"\\n\t<input type=\\\"numeric\\\" id=\\\"ssg-vp-w\\\" class=\\\"ssg-input-s\\\" value=\\\"\"\n    + alias4(((helper = (helper = helpers.width || (depth0 != null ? depth0.width : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{\"name\":\"width\",\"hash\":{},\"data\":data}) : helper)))\n    + \"\\\">\\n\t<span id=\\\"ssg-vp-by\\\">x</span>\\n\t<input type=\\\"numeric\\\" id=\\\"ssg-vp-h\\\" class=\\\"ssg-input-s\\\" value=\\\"\"\n    + alias4(((helper = (helper = helpers.height || (depth0 != null ? depth0.height : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{\"name\":\"height\",\"hash\":{},\"data\":data}) : helper)))\n    + \"\\\">\\n\t<button id=\\\"ssg-btn-disco\\\" class=\\\"ssg-btn\\\">Disco</button>\\n\";\n},\"useData\":true});","\"use strict\";\n/// <reference path=\"../../typings/index.d.ts\" />\n;\nvar ssg;\n(function (ssg) {\n    var UI;\n    (function (UI) {\n        var win = window, doc = document, ssgCoreTemplates = ssgCore.templates, ssgTemplates = ssg.templates, patternConfig = null, currentSingleItems = [], currentSingleCount = 0, currentUIState = ssg.UI.State;\n        var viewports = [\n            320,\n            768,\n            1024,\n            3500\n        ];\n        UI.coreUiElement = {\n            // Buttons\n            btnShowAnnotion: '.ssg-button[data-action=\\'ssg-annot\\']',\n            btnShowCode: '.ssg-button[data-action=\\'ssg-code\\']',\n            btnShowToC: '.ssg-button[data-action=\\'ssg-toc\\']',\n            discoButton: '.ssg-button[data-viewport=\\'disco\\']',\n            filterButton: '.ssg-core-filter .ssg-button',\n            patternItem: 'div[class^=ssg-item]',\n            tocItem: '.ssg-toc-item',\n            viewButton: '.ssg-core-view .ssg-button',\n            viewPortButton: '.ssg-core-viewport .ssg-button',\n            viewPortTarget: '.ssg-patterns-inner',\n            viewPortWidth: '#ssg-in-width',\n            viewToc: '.ssg-toc',\n            viewTocInner: '.ssg-toc-inner',\n            singleItemNav: 'ssg-core-nav',\n            singleItemNavTitle: '#ssg-item-nav-label',\n            singleNavLeft: 'ssg-left',\n            singleNavRight: 'ssg-right',\n            tocSearchBox: '.ssg-toc-searchbox',\n            tocSearchValue: 'toc-searchbox',\n            // States\n            state: {\n                active: 'active',\n                hidden: 'hidden',\n                show: 'show'\n            }\n        };\n        UI.State = (function () {\n            var STATE_KEY = 'ssg.UI.State', XTRAS = ['isolate', 'code', 'annotation'], FILTERS = ['atoms', 'molecules', 'organism', 'templates', 'pages', 'single'], SCREEN = ['s', 'm', 'l', 'uwd', 'full', 'disco'];\n            var _currentUIState = null;\n            // default UI State;\n            var defState = {\n                'filter': 'atoms',\n                'screen': window.screen.availWidth,\n                'xtras': ['annotation']\n            };\n            // Validate current state entry\n            var _validateState = function (state) {\n                // checking if all states are valid\n                var checkSumXtras = 0, checkSumFilter = 0, checkSumScreen = 0;\n                // Check current xtra selection\n                for (var i = state.xtras.length - 1; i > 0; i--) {\n                    var curState = state.xtras[i];\n                    if (XTRAS.indexOf(curState) === -1) {\n                        checkSumXtras += 1;\n                    }\n                }\n                // Check current filter\n                if (FILTERS.indexOf(state.filter) === -1) {\n                    checkSumFilter += 1;\n                }\n                // check current screen\n                try {\n                    parseInt(state.screen.toString(), 10);\n                }\n                catch (exception) {\n                    console.log('ERROR:' + exception);\n                    checkSumScreen += 1;\n                }\n                if (checkSumFilter + checkSumXtras + checkSumScreen === 0) {\n                    return true;\n                }\n                return false;\n            };\n            var _updateState = function (state) {\n                var curState = state;\n                if (_validateState(state)) {\n                    localStorage.setItem(STATE_KEY, JSON.stringify(curState));\n                }\n                else {\n                    throw 'There are some errors with the state';\n                }\n            };\n            (function () {\n                var sessionState = localStorage.getItem(STATE_KEY);\n                // If session already exists\n                if (sessionState) {\n                    _currentUIState = JSON.parse(sessionState);\n                }\n                else {\n                    localStorage.setItem(STATE_KEY, JSON.stringify(defState));\n                    _currentUIState = defState;\n                }\n            })();\n            return {\n                current: function () {\n                    return _currentUIState;\n                },\n                update: function (state) {\n                    _updateState(state);\n                }\n            };\n        })();\n        var Utils;\n        (function (Utils) {\n            Utils.requestData = function (method, url) {\n                return new Promise(function (resolve, reject) {\n                    var xhr;\n                    var loaded = function () {\n                        var curStatus = this.status;\n                        if (curStatus >= 200 && curStatus < 300) {\n                            resolve(xhr.response);\n                        }\n                        else {\n                            reject({\n                                status: this.status,\n                                statusText: xhr.statusText\n                            });\n                        }\n                    };\n                    var onError = function () {\n                        reject({\n                            status: this.status,\n                            statusText: xhr.statusText\n                        });\n                    };\n                    xhr = new XMLHttpRequest();\n                    xhr.open(method, url);\n                    xhr.onload = loaded;\n                    xhr.onerror = onError;\n                    xhr.send();\n                });\n            };\n            Utils.changeItemToSinglePage = function (nodes) {\n                var nodeCount = nodes.length;\n                while (nodeCount !== 0) {\n                    nodeCount -= 1;\n                    var curNode = nodes[nodeCount];\n                    if (curNode.classList.contains('ssg-item')) {\n                        curNode.classList.remove('ssg-item');\n                        curNode.classList.add('ssg-item-single');\n                    }\n                }\n            };\n            Utils.hideSingleItemSlider = function (hide) {\n                var singleItemSelector = doc.querySelector('.' + UI.coreUiElement.singleItemNav);\n                if (singleItemSelector !== undefined && singleItemSelector !== null) {\n                    if (hide === true) {\n                        singleItemSelector.classList.add(UI.coreUiElement.state.hidden);\n                    }\n                    else {\n                        singleItemSelector.classList.remove(UI.coreUiElement.state.hidden);\n                    }\n                }\n            };\n        })(Utils = UI.Utils || (UI.Utils = {}));\n        ;\n        UI.Filter = {\n            elements: function (filterValue) {\n                switch (filterValue) {\n                    case 'atoms':\n                    case 'molecules':\n                        var newState = ssg.UI.State.current();\n                        newState.filter = filterValue;\n                        ssg.UI.State.update(newState);\n                        var allElements = doc.querySelectorAll('div[data-cat]');\n                        for (var i = allElements.length - 1; i >= 0; i--) {\n                            var curElement = allElements[i];\n                            if (curElement.dataset['cat'] === filterValue) {\n                                curElement.classList.remove('hide');\n                            }\n                            else {\n                                curElement.classList.add('hide');\n                            }\n                        }\n                        ssg.UI.Utils.hideSingleItemSlider(true);\n                        break;\n                    case 'organism':\n                        ssg.UI.Filter.sliderSelection(filterValue);\n                        break;\n                    case 'templates':\n                        ssg.UI.Filter.sliderSelection(filterValue);\n                        break;\n                    case 'pages':\n                        ssg.UI.Filter.sliderSelection(filterValue);\n                        break;\n                    default:\n                        break;\n                }\n            },\n            sliderSelection: function (filter) {\n                var allElements = doc.querySelectorAll('div[data-cat]'), firstItemFound = false;\n                // reset currentSingleItem\n                currentSingleItems = [];\n                for (var i = 0; i < allElements.length; i++) {\n                    var curElement = allElements[i];\n                    if (curElement.dataset['cat'] === filter) {\n                        var curSingleItem = {\n                            category: filter,\n                            file: curElement.dataset['file'],\n                            title: curElement.getAttribute('title')\n                        };\n                        currentSingleItems.push(curSingleItem);\n                        if (firstItemFound === false) {\n                            currentSingleCount = 0;\n                            firstItemFound = true;\n                            if (curElement.classList.contains('hide')) {\n                                curElement.classList.remove('hide');\n                            }\n                        }\n                        else {\n                            curElement.classList.add('hide');\n                        }\n                    }\n                    else {\n                        curElement.classList.add('hide');\n                    }\n                }\n                ssg.UI.EnableSingleSlider(currentSingleItems, null);\n                if (currentSingleItems.length > 1) {\n                    ssg.UI.Utils.hideSingleItemSlider(false);\n                }\n                else {\n                    ssg.UI.Utils.hideSingleItemSlider(true);\n                }\n            }\n        };\n        UI.initDisco = function () {\n            var disco = setInterval(function () {\n                var discoButton = document.querySelector(UI.coreUiElement.discoButton + '.' + UI.coreUiElement.state.active), viewPortInner = doc.querySelector(UI.coreUiElement.viewPortTarget), viewPortWidth = doc.querySelector(UI.coreUiElement.viewPortWidth);\n                if (discoButton !== null) {\n                    var curViewPort = Math.floor(Math.random() * (viewports.length - 0)) + 0;\n                    viewPortWidth.value = viewPortInner.style.width = viewports[curViewPort].toString();\n                }\n                else {\n                    clearInterval(disco);\n                }\n            }, 1000);\n        };\n        UI.Events = {\n            // change all filter\n            changeFilter: function (event) {\n                // prevent all default\n                event.preventDefault();\n                var allButtons = doc.querySelectorAll(UI.coreUiElement.filterButton);\n                for (var i = allButtons.length - 1; i >= 0; i--) {\n                    if (allButtons[i].classList.contains(UI.coreUiElement.state.active)) {\n                        allButtons[i].classList.remove(UI.coreUiElement.state.active);\n                    }\n                }\n                var curButton = event.target, filter = curButton.dataset['filter'];\n                curButton.classList.add(UI.coreUiElement.state.active);\n                if (filter === undefined) {\n                    throw 'filter cannot be undefined';\n                }\n                UI.Filter.elements(filter);\n                // Check if toc button is active otherwise remove state.\n                var tocButton = doc.querySelectorAll(UI.coreUiElement.btnShowToC);\n                // if toc button was found\n                if (tocButton.length !== 0) {\n                    // remove active state in case toc was selected\n                    if (tocButton[0].classList.contains(UI.coreUiElement.state.active)) {\n                        tocButton[0].classList.remove('active');\n                    }\n                }\n                ;\n                var curState = ssg.UI.State.current();\n                curState.filter = filter;\n                ssg.UI.State.update(curState);\n                return false;\n            },\n            // change view - Add isolated, code, Annotation\n            changeView: function (event) {\n                // prevent all default\n                event.preventDefault();\n                var curButton = event.target, filter = curButton.dataset['filter'];\n                curButton.classList.contains(UI.coreUiElement.state.active) ?\n                    curButton.classList.remove(UI.coreUiElement.state.active) : curButton.classList.add(UI.coreUiElement.state.active);\n            },\n            // adjust view port to differnet width\n            changeViewPort: function (event) {\n                event.preventDefault();\n                var vpButton = event.target, vpActiveButton = doc.querySelector(UI.coreUiElement.viewPortButton + '.' + UI.coreUiElement.state.active), vpData = vpButton.dataset['viewport'], vpTarget = doc.querySelector(UI.coreUiElement.viewPortTarget), widthInput = doc.querySelector(UI.coreUiElement.viewPortWidth);\n                // Updating State\n                var newState = ssg.UI.State.current();\n                newState.screen = vpData;\n                ssg.UI.State.update(newState);\n                // remove current active button\n                if (vpActiveButton !== null) {\n                    vpActiveButton.classList.remove(UI.coreUiElement.state.active);\n                }\n                if (vpActiveButton === vpButton) {\n                    vpButton.classList.remove(UI.coreUiElement.state.active);\n                    vpData = 'full';\n                }\n                else {\n                    vpButton.classList.add(UI.coreUiElement.state.active);\n                }\n                // recheck Active Buttons\n                vpActiveButton = doc.querySelector(UI.coreUiElement.viewPortButton + '.' + UI.coreUiElement.state.active);\n                if (vpActiveButton === null) {\n                    vpActiveButton = doc.querySelector('.ssg-button[data-viewport=\\'full\\']');\n                    vpActiveButton.classList.add(UI.coreUiElement.state.active);\n                }\n                // action what to do\n                if (typeof vpTarget !== undefined) {\n                    switch (vpData) {\n                        case 'full':\n                            vpData = vpTarget.style.width = win.innerWidth.toString();\n                            break;\n                        case 'disco':\n                            ssg.UI.initDisco();\n                            break;\n                        default:\n                            if (vpData !== undefined && vpData !== null) {\n                                vpTarget.style.width = vpData;\n                            }\n                            break;\n                    }\n                    if (vpData !== undefined && vpData !== null) {\n                        // assign special class for documentation\n                        var vpCurSize = parseInt(vpData, 10);\n                        if (vpCurSize !== NaN && vpCurSize <= 1024) {\n                            console.log('small view port size');\n                            vpTarget.classList.add('vp-small');\n                        }\n                        else {\n                            console.log('large view port size');\n                            vpTarget.classList.remove('vp-small');\n                        }\n                    }\n                }\n                if (vpData !== undefined && vpData !== 'disco') {\n                    // Update width indicator\n                    vpTarget = doc.querySelector(UI.coreUiElement.viewPortTarget);\n                    widthInput.value = vpData;\n                }\n            },\n            // filter single toc element\n            filterToc: function (event) {\n                event.preventDefault();\n                var currentToc = event.target;\n                // just in case current toc is null and the parent node is null\n                if (currentToc === null || currentToc.parentNode === null) {\n                    return;\n                }\n                var filter = currentToc.dataset['filter'], filterFolder = currentToc.dataset['folder'], filterCat = (currentToc.parentNode.attributes.getNamedItem('id').value), tocButton = doc.querySelector(ssg.UI.coreUiElement.btnShowToC);\n                if (tocButton) {\n                    tocButton.classList.add('active');\n                }\n                if (filterCat) {\n                    if (filterFolder === 'templates' ||\n                        filterFolder === 'organism' ||\n                        filterFolder === 'page') {\n                        var selectedItems = doc.querySelectorAll('div[data-cat=' + filterFolder + ']');\n                        // Updating current state\n                        var curState = ssg.UI.State.current();\n                        curState.filterSelector = '.' + filter;\n                        ssg.UI.State.update(curState);\n                        ssg.UI.Filter.sliderSelection(filterFolder);\n                    }\n                    else {\n                        ssg.UI.Utils.hideSingleItemSlider(true);\n                    }\n                    var category = filterCat.split('-')[1];\n                    var filterButtons = document.querySelectorAll('.ssg-core-filter .ssg-button');\n                    for (var i = filterButtons.length - 1; i >= 0; i--) {\n                        var curFilterButton = filterButtons[i], curFilterStyle = curFilterButton.classList, curDataSet = curFilterButton.dataset['filter'];\n                        if (curFilterStyle.contains('active')) {\n                            curFilterStyle.remove('active');\n                        }\n                        if (curDataSet === category) {\n                            curFilterStyle.add('active');\n                        }\n                    }\n                }\n                // Updating State\n                var newState = ssg.UI.State.current();\n                newState.filter = 'single';\n                newState.filterSelector = '.' + filter;\n                ssg.UI.State.update(newState);\n                if (filter !== null) {\n                    var allElements = doc.querySelectorAll(UI.coreUiElement.patternItem), tocElement = doc.querySelector(UI.coreUiElement.viewToc);\n                    if (tocElement === null) {\n                        throw 'Current toc elment is null';\n                    }\n                    for (var i = allElements.length - 1; i >= 0; i--) {\n                        var curItem = allElements[i];\n                        if (curItem.dataset['file'] === filter) {\n                            curItem.classList.remove('hide');\n                        }\n                        else {\n                            curItem.classList.add('hide');\n                        }\n                    }\n                    tocElement.classList.remove('show');\n                    tocElement.classList.add('hidden');\n                }\n            },\n            // search for item in toc\n            searchToc: function (event) {\n                event.preventDefault();\n                var searchBox = doc.getElementById(UI.coreUiElement.tocSearchValue);\n                if (searchBox !== null) {\n                    var searchValue = searchBox.value;\n                    var resetResult = doc.querySelectorAll('.ssg-toc-item');\n                    for (var j = resetResult.length - 1; j >= 0; j--) {\n                        if (resetResult[j].classList.contains('hide')) {\n                            resetResult[j].classList.remove('hide');\n                        }\n                    }\n                    if (searchValue !== '') {\n                        var searchResult = doc.querySelectorAll(\".ssg-toc-item:not([data-filter*='\" + searchValue + \"'])\");\n                        if (searchResult !== null) {\n                            for (var i = searchResult.length - 1; i >= 0; i--) {\n                                searchResult[i].classList.add('hide');\n                            }\n                        }\n                    }\n                }\n            },\n            // show and hides annotations\n            showAnnotation: function (event) {\n                event.preventDefault();\n                event.stopImmediatePropagation();\n                // Updating State\n                var newState = ssg.UI.State.current();\n                // check if code is already included in UI Extras\n                if (newState.xtras.indexOf('annotation') === -1) {\n                    newState.xtras.push('annotation');\n                }\n                else {\n                    var newXtras = newState.xtras.filter(function (e) { return e !== 'annotation'; });\n                    newState.xtras = newXtras;\n                }\n                ssg.UI.State.update(newState);\n                if (event.target.classList.contains(UI.coreUiElement.state.active)) {\n                    // show annotation by adding class\n                    var codeBlocks = doc.querySelectorAll('.ssg-item-description');\n                    for (var i = codeBlocks.length - 1; i >= 0; i--) {\n                        codeBlocks[i].classList.add(UI.coreUiElement.state.show);\n                    }\n                }\n                else {\n                    // hide annotation code by removing the class\n                    var codeBlocks = doc.querySelectorAll('.ssg-item-description');\n                    for (var i = codeBlocks.length - 1; i >= 0; i--) {\n                        codeBlocks[i].classList.remove(UI.coreUiElement.state.show);\n                    }\n                }\n            },\n            // Show and hides source code\n            showSource: function (event) {\n                event.preventDefault();\n                event.stopImmediatePropagation();\n                // Updating State\n                var newState = ssg.UI.State.current();\n                // check if code is already included in UI Extras\n                if (newState.xtras.indexOf('code') === -1) {\n                    newState.xtras.push('code');\n                }\n                else {\n                    var newXtras = newState.xtras.filter(function (e) { return e !== 'code'; });\n                    newState.xtras = newXtras;\n                }\n                ssg.UI.State.update(newState);\n                if (event.target.classList.contains(UI.coreUiElement.state.active)) {\n                    // sho source code by adding class\n                    var codeBlocks = doc.querySelectorAll('.ssg-item-code');\n                    for (var i = codeBlocks.length - 1; i >= 0; i--) {\n                        codeBlocks[i].classList.add(UI.coreUiElement.state.show);\n                    }\n                }\n                else {\n                    // hide source code by removing the class\n                    var codeBlocks = doc.querySelectorAll('.ssg-item-code');\n                    for (var i = codeBlocks.length - 1; i >= 0; i--) {\n                        codeBlocks[i].classList.remove(UI.coreUiElement.state.show);\n                    }\n                }\n            },\n            // show and collapse table of contents\n            showToc: function (event) {\n                event.preventDefault();\n                var currentButton = event.target, containerToc = doc.querySelector(UI.coreUiElement.viewToc);\n                currentButton !== null && currentButton.classList.contains(UI.coreUiElement.state.active) ?\n                    currentButton.classList.remove(UI.coreUiElement.state.active) : currentButton.classList.add(UI.coreUiElement.state.active);\n                if (containerToc !== null) {\n                    if (containerToc.classList.contains(UI.coreUiElement.state.show)) {\n                        containerToc.classList.add(UI.coreUiElement.state.hidden);\n                        containerToc.classList.remove(UI.coreUiElement.state.show);\n                    }\n                    else {\n                        containerToc.classList.remove(UI.coreUiElement.state.hidden);\n                        containerToc.classList.add(UI.coreUiElement.state.show);\n                    }\n                }\n            },\n            // Resize View Port through manual update of width\n            viewPortResizer: function (event) {\n                if (event instanceof KeyboardEvent) {\n                    var kbEvent = event;\n                    if (kbEvent.keyCode === 13) {\n                        var innerPattern = doc.querySelector(UI.coreUiElement.viewPortTarget), newWidth = doc.querySelector(UI.coreUiElement.viewPortWidth);\n                        innerPattern.style.width = newWidth.value;\n                    }\n                }\n                else {\n                    var innerPattern = doc.querySelector(UI.coreUiElement.viewPortTarget), newWidth = doc.querySelector(UI.coreUiElement.viewPortWidth);\n                    innerPattern.style.width = newWidth.value;\n                }\n            },\n            // register specific event on all notes\n            registerEvents: function (curElements, eventType, handler) {\n                for (var i = curElements.length - 1; i >= 0; i--) {\n                    curElements[i].addEventListener(eventType, handler);\n                }\n            }\n        };\n        UI.Render = function () {\n            var RenderToc = function (patternConfig) {\n                var patterns = patternConfig.patterns.filter(function (object) {\n                    return object['deleted'] === undefined;\n                }), folder = patternConfig.folder, ssgToc = doc.querySelector(UI.coreUiElement.viewTocInner);\n                for (var i = 0; i < folder.length; i++) {\n                    var baseElement = '<ul><li id=ssg-' + folder[i].name + ' class=ssg-toc-header>' +\n                        folder[i].name +\n                        '</li><ul id=ssg-' + folder[i].name + '-items class=ssg-toc-items></ul></ul>';\n                    ssgToc.insertAdjacentHTML('beforeend', baseElement);\n                }\n                for (var j = 0; j < patterns.length; j++) {\n                    var folderpath = patterns[j].filepath.split('/')[0];\n                    var patternTitle = '<li class=ssg-toc-item data-filter=\\\"' +\n                        patterns[j].filename + '\\\" ' +\n                        ' data-folder=\\\"' + folderpath + '\\\" ' +\n                        '>' +\n                        patterns[j].title + '</li>';\n                    var currentSection = doc.getElementById('ssg-' + folderpath + '-items');\n                    if (currentSection !== null) {\n                        currentSection.insertAdjacentHTML('beforeend', patternTitle);\n                    }\n                }\n                var tocItems = doc.querySelectorAll(UI.coreUiElement.tocItem);\n                for (var k = 0; k < tocItems.length; k++) {\n                    tocItems[k].addEventListener('click', UI.Events.filterToc);\n                }\n            };\n            var container = doc.querySelector(UI.coreUiElement.viewPortTarget), tocContainer = doc.querySelector(UI.coreUiElement.viewTocInner);\n            var allContent = '', allToc = '', parser = new DOMParser();\n            for (var i = patternConfig.patterns.length - 1; i >= 0; i--) {\n                var curPattern = patternConfig.patterns[i], curPatternTitle = curPattern.filename, curTemplate = ssgTemplates[curPatternTitle];\n                // Define base filter\n                curPattern.baseFilter = curPattern.filepath.split('/')[0];\n                if (curPattern !== null) {\n                    curPattern.sample = curTemplate !== undefined ? curTemplate(ssgData) : curTemplate;\n                    var content = ssgCoreTemplates.patternItem(curPattern);\n                    try {\n                        // Parse Document and check if all elements are properly closed\n                        var domContent = parser.parseFromString(content, 'text/html');\n                        // Append parsed content\n                        allContent = domContent.body.innerHTML + allContent;\n                    }\n                    catch (exception) {\n                        console.log(exception);\n                    }\n                }\n            }\n            var allContentDOM = parser.parseFromString(allContent, 'text/html');\n            // alter templates and pages\n            var allTempLates = allContentDOM.querySelectorAll('div[data-cat=templates]'), allPages = allContentDOM.querySelectorAll('div[data-cat=pages]'), allOrganism = allContentDOM.querySelectorAll('div[data-cat=organism]');\n            Utils.changeItemToSinglePage(allTempLates);\n            Utils.changeItemToSinglePage(allPages);\n            Utils.changeItemToSinglePage(allOrganism);\n            container.insertAdjacentHTML('afterbegin', allContentDOM.body.innerHTML);\n            Prism.highlightAll();\n            RenderToc(patternConfig);\n            UI.ApplyUIState(ssg.UI.State.current());\n        };\n        UI.ApplyUIState = function (state) {\n            var applyFilter = function (state) {\n                if (state.filter !== undefined\n                    && state.filter !== 'single') {\n                    var buttons = doc.querySelectorAll(\".ssg-button[data-filter]\");\n                    // Set correct button\n                    for (var i = buttons.length - 1; i >= 0; i--) {\n                        var curButton = buttons[i];\n                        if (curButton.dataset !== null\n                            && curButton.dataset !== undefined\n                            && curButton.dataset['filter'] === state.filter) {\n                            if (!curButton.classList.contains('active')) {\n                                curButton.classList.add('active');\n                            }\n                        }\n                        else {\n                            if (curButton.classList.contains('active')) {\n                                curButton.classList.remove('active');\n                            }\n                        }\n                    }\n                    var query = \"div[class^='ssg-item'][data-cat='\" + state.filter + \"']\", invQuery = \"div[class^='ssg-item']:not([data-cat='\" + state.filter + \"'])\";\n                    if (state.filter === 'single') {\n                        var filter = state.filterSelector.substr(1);\n                        query = \"div[data-file='\" + filter + \"']\";\n                        invQuery = \"div:not([data-file='\" + filter + \"'])\";\n                        var tocButton = doc.querySelectorAll(\".ssg-button[data-action='ssg-toc']\");\n                        if (tocButton !== undefined && tocButton.length === 1) {\n                            tocButton[0].classList.add('active');\n                        }\n                    }\n                    if (state.filter === 'organism' ||\n                        state.filter === 'molecules' ||\n                        state.filter === 'templates') {\n                        ssg.UI.Filter.sliderSelection(state.filter);\n                    }\n                    // unselect all\n                    var notSelItems = doc.querySelectorAll(invQuery);\n                    for (var i = notSelItems.length - 1; i >= 0; i--) {\n                        notSelItems[i].classList.add('hide');\n                    }\n                    // make sure all are selected\n                    var selItems = doc.querySelectorAll(query);\n                    if (selItems.length === 1) {\n                        var curItem = selItems[0];\n                        if (curItem !== undefined &&\n                            curItem !== null &&\n                            curItem.dataset !== undefined &&\n                            curItem.dataset !== null\n                            && (curItem.dataset.cat === 'templates'\n                                || curItem.dataset.cat === 'pages'\n                                || curItem.dataset.cat === 'organism')) {\n                            if (curItem.dataset.cat !== undefined\n                                && curItem.dataset.cat !== null) {\n                                ssg.UI.Filter.sliderSelection(curItem.dataset.cat);\n                            }\n                        }\n                        else {\n                            ssg.UI.Utils.hideSingleItemSlider(true);\n                        }\n                    }\n                    else {\n                        for (var i = selItems.length - 1; i >= 0; i--) {\n                            selItems[i].classList.remove('hide');\n                        }\n                    }\n                }\n                else if (state.filter === 'single') {\n                    var tocButton = doc.querySelector(UI.coreUiElement.btnShowToC);\n                    if (tocButton !== null) {\n                        tocButton.classList.add('active');\n                    }\n                    if (state.filterSelector !== undefined &&\n                        state.filterSelector !== null) {\n                        var curFilter = state.filterSelector.substr(1);\n                        var allAMItems = [].slice.call(doc.querySelectorAll('div[class=ssg-item')), allOPTItems = [].slice.call(doc.querySelectorAll('div[class=ssg-item-single')), allItems = allAMItems.concat(allOPTItems);\n                        for (var i = allItems.length - 1; i >= 0; i--) {\n                            if (allItems[i].dataset['file'] !== curFilter) {\n                                var curItem = allItems[i];\n                                curItem.classList.add('hide');\n                            }\n                        }\n                    }\n                }\n            };\n            // apply the correct selected scren width tot the viewport\n            var applyScreenWidth = function (state) {\n                var viewPortQuery = \"button[data-viewport='\" + state.screen + \"']\", viewPortInvQuery = \"button.active[data-viewport]\", \n                // selecting buttons\n                viewPortActiveButton = doc.querySelector(viewPortInvQuery), viewPortButton = doc.querySelector(viewPortQuery), \n                // width selector\n                widthSelector = doc.getElementById('ssg-in-width'), contentWidth = doc.querySelector('.ssg-patterns-inner');\n                // If full screeen use actian width\n                if (state.screen === 'full') {\n                    state.screen = window.innerWidth;\n                }\n                // set inner screen width of patterns\n                contentWidth.style.width = state.screen + \"px\";\n                // view width selector\n                widthSelector.value = state.screen;\n                // activate viewport button\n                if (viewPortButton !== undefined\n                    && viewPortButton !== null) {\n                    viewPortButton.classList.add('active');\n                    if (viewPortButton !== viewPortActiveButton && viewPortActiveButton !== null) {\n                        viewPortActiveButton.classList.remove('active');\n                    }\n                }\n            };\n            // applies extras such as shwo Source code\n            var applyExtras = function (state) {\n                // Set annotation button and enable annotations\n                if (state.xtras.indexOf('annotation') !== -1) {\n                    var notes = doc.querySelectorAll('.ssg-item-description');\n                    for (var i = notes.length - 1; i >= 0; i--) {\n                        var curNote = notes[i];\n                        curNote.classList.add('show');\n                    }\n                    var notesButton = doc.querySelectorAll(\"button[data-action='ssg-annot']\");\n                    for (var i = notesButton.length - 1; i >= 0; i--) {\n                        notesButton[i].classList.add('active');\n                    }\n                }\n                // Set code button and shows code\n                if (state.xtras.indexOf('code') !== -1) {\n                    var notes = doc.querySelectorAll('.ssg-item-code');\n                    for (var i = notes.length - 1; i >= 0; i--) {\n                        var curNote = notes[i];\n                        curNote.classList.add('show');\n                    }\n                    var notesButton = doc.querySelectorAll(\"button[data-action='ssg-code']\");\n                    for (var i = notesButton.length - 1; i >= 0; i--) {\n                        notesButton[i].classList.add('active');\n                    }\n                }\n            };\n            applyFilter(state);\n            applyScreenWidth(state);\n            applyExtras(state);\n        };\n        UI.EnableSingleSlider = function (currentSingleItems, filter) {\n            var slideItems = currentSingleItems, currentTitle = doc.querySelector(UI.coreUiElement.singleItemNavTitle);\n            if (currentTitle !== null) {\n                currentTitle.textContent = slideItems[0].title;\n            }\n            var setCurrentItem = function (index) {\n                var curElement = slideItems[index];\n                if (currentTitle !== null) {\n                    currentTitle.textContent = curElement.title;\n                }\n                var allElements = doc.querySelectorAll('div[data-cat=\\'' + slideItems[currentSingleCount].category + '\\']');\n                for (var j = 0; j < allElements.length; j++) {\n                    var curPatternElement = allElements[j];\n                    if (curPatternElement.dataset['file'] === curElement.file) {\n                        curPatternElement.classList.remove('hide');\n                        var newState = ssg.UI.State.current();\n                        // newState.filter = \"single\";\n                        newState.filterSelector = '.' + curPatternElement.dataset['file'];\n                        ssg.UI.State.update(newState);\n                    }\n                    else {\n                        curPatternElement.classList.add('hide');\n                    }\n                }\n            };\n            var slidePatterns = function (event) {\n                event.preventDefault();\n                event.stopPropagation();\n                var currentButton = event.target;\n                if (currentButton !== null) {\n                    if (currentButton.dataset['filter'] === UI.coreUiElement.singleNavLeft) {\n                        currentSingleCount -= 1;\n                    }\n                    ;\n                    if (currentButton.dataset['filter'] === UI.coreUiElement.singleNavRight) {\n                        currentSingleCount += 1;\n                    }\n                    ;\n                    if (currentSingleCount > currentSingleItems.length - 1) {\n                        currentSingleCount = 0;\n                    }\n                    if (currentSingleCount < 0) {\n                        currentSingleCount = currentSingleItems.length - 1;\n                    }\n                }\n                setCurrentItem(currentSingleCount);\n            };\n            // check if only one pattern is in current selection\n            if (slideItems.length <= 1) {\n                return;\n            }\n            // let slider = doc.querySelectorAll('.ssg-core-nav .ssg-button[data-filter=\\'' + filter + '\\']');\n            var slider = doc.querySelectorAll('.ssg-core-nav .ssg-button');\n            for (var i = 0; i < slider.length; i++) {\n                // remova all previous registered event handler\n                var currentButton = slider[i];\n                if (currentButton !== null) {\n                    // clone current node without event handler\n                    var newButton = currentButton.cloneNode(true);\n                    // register new Click event\n                    newButton.addEventListener('click', slidePatterns);\n                    if (currentButton.parentNode !== null) {\n                        // replace element\n                        currentButton.parentNode.replaceChild(newButton, currentButton);\n                    }\n                }\n            }\n            var curState = ssg.UI.State.current();\n            // Check if TOC have been selected\n            if (curState.filterSelector !== undefined) {\n                // Setting current Item count i case filter using TOC\n                currentSingleCount = currentSingleItems.findIndex(function (x) { return x.file === curState.filterSelector.substring(1); });\n                // Update from current filter\n                setCurrentItem(currentSingleCount);\n            }\n        };\n        UI.ShowSliderCtrl = function (show) {\n            var singleSliderControl = document.querySelector('.' + UI.coreUiElement.singleItemNav);\n            if (singleSliderControl !== null) {\n                if (show) {\n                    singleSliderControl.classList.remove('hidden');\n                }\n                else {\n                    singleSliderControl.classList.add('hidden');\n                }\n            }\n        };\n        UI.InitEvents = function () {\n            // Render Events\n            var filterButtons = doc.querySelectorAll(UI.coreUiElement.filterButton), viewButtons = doc.querySelectorAll(UI.coreUiElement.viewButton), viewPortButtons = doc.querySelectorAll(UI.coreUiElement.viewPortButton), viewPortWidth = doc.querySelectorAll(UI.coreUiElement.viewPortWidth), \n            // Action Buttons\n            showCode = doc.querySelectorAll(UI.coreUiElement.btnShowCode), showAnnot = doc.querySelectorAll(UI.coreUiElement.btnShowAnnotion), showToc = doc.querySelectorAll(UI.coreUiElement.btnShowToC), \n            // TOC Eevent\n            allTocItems = doc.querySelectorAll(UI.coreUiElement.tocSearchBox);\n            UI.Events.registerEvents(filterButtons, 'click', UI.Events.changeFilter);\n            UI.Events.registerEvents(viewButtons, 'click', UI.Events.changeView); // mabye obsolete?\n            UI.Events.registerEvents(viewPortButtons, 'click', UI.Events.changeViewPort);\n            UI.Events.registerEvents(viewPortWidth, 'blur', UI.Events.viewPortResizer);\n            UI.Events.registerEvents(viewPortWidth, 'focusout', UI.Events.viewPortResizer);\n            UI.Events.registerEvents(viewPortWidth, 'keypress', UI.Events.viewPortResizer);\n            UI.Events.registerEvents(showCode, 'click', UI.Events.showSource);\n            UI.Events.registerEvents(showAnnot, 'click', UI.Events.showAnnotation);\n            // show and hide table fo contents\n            UI.Events.registerEvents(showToc, 'click', UI.Events.showToc);\n            // Search table of contents\n            UI.Events.registerEvents(allTocItems, 'keyup', UI.Events.searchToc);\n        };\n        UI.Init = function () {\n            Promise.all([ssg.UI.Utils.requestData('GET', '/_config/pattern.conf.json')])\n                .then(function (result) {\n                try {\n                    patternConfig = JSON.parse(result.toString());\n                }\n                catch (error) {\n                    console.log(error);\n                }\n            })\n                .then(function () {\n                UI.Render();\n                UI.InitEvents();\n                UI.ApplyUIState(ssg.UI.State.current());\n                if (UI.PostRender.length !== 0) {\n                    UI.PostRender.forEach(function (element) {\n                        element();\n                    });\n                }\n            })\n                .catch(function (error) {\n                console.log(error);\n            });\n        };\n        UI.PostRender = [];\n    })(UI = ssg.UI || (ssg.UI = {}));\n    ;\n})(ssg || (ssg = {}));\nssg.UI.Init();\n","\"use strict\";\nHandlebars.registerHelper('description', function (block) {\n    var description = '', markdownKey = block.data.root.baseFilter + '_' + block.data.root.filename;\n    if (ssgDoc[markdownKey] !== undefined) {\n        description = ssgDoc[markdownKey].body;\n        return new Handlebars.SafeString(description);\n    }\n    else {\n        // description = block.data.root.description;\n        return block.data.root.description;\n    }\n});\n"]}